name: Free RDP Tunnel - Working

on:
  workflow_dispatch:
  push:
    branches: [main, master]

env:
  RDP_USER: "RDPAdmin"
  RDP_PASS: "P@ssw0rd123!"

jobs:
  rdp-tunnel:
    runs-on: windows-latest
    timeout-minutes: 355

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable RDP Service
        shell: pwsh
        run: |
          reg add "HKLM\System\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
          netsh advfirewall firewall set rule group="remote desktop" new enable=Yes
          if ((Get-Service -Name TermService).Status -ne 'Running') {
            Start-Service -Name TermService
          }

      - name: Create User Account
        shell: pwsh
        run: |
          $user = $env:RDP_USER
          $pass = $env:RDP_PASS

          if ((net user $user | Out-String).Trim()) {
            net user $user $pass
          } else {
            net user $user $pass /add
          }

          net localgroup administrators $user /add
          net localgroup "Remote Desktop Users" $user /add
          net user $user /passwordchg:no
          net user $user /expires:never

      - id: serveo
        name: Start Serveo Tunnel
        shell: pwsh
        run: |
          $Port = Get-Random -Minimum 40000 -Maximum 50000
          Add-Content -Path $env:GITHUB_OUTPUT -Value "PORT=$Port"

          $scriptPath = Join-Path $PWD 'serveo-tunnel.ps1'

          # Write tunnel script line by line (avoids YAML here-string issues)
          Set-Content $scriptPath "param([int]`$Port)"
          Add-Content $scriptPath "while (`$true) {"
          Add-Content $scriptPath "  try {"
          Add-Content $scriptPath "    ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 -R `$Port:localhost:3389 serveo.net"
          Add-Content $scriptPath "    Start-Sleep -Seconds 5"
          Add-Content $scriptPath "  } catch {"
          Add-Content $scriptPath "    Start-Sleep -Seconds 10"
          Add-Content $scriptPath "  }"
          Add-Content $scriptPath "}"

          Start-Process -FilePath (Get-Command pwsh).Source -ArgumentList '-NoProfile','-ExecutionPolicy','Bypass','-File',$scriptPath,'-Port',$Port -WindowStyle Hidden

          Write-Output "ðŸŽ¯ Connect: serveo.net:$Port"
          Write-Output "ðŸ‘¤ User: $env:RDP_USER"
          Write-Output "ðŸ”‘ Pass: $env:RDP_PASS"

      - name: Start Cloudflared (Backup)
        shell: pwsh
        run: |
          $cf = "$PWD\cloudflared.exe"
          Invoke-WebRequest -Uri 'https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe' -OutFile $cf -UseBasicParsing
          Start-Process -FilePath $cf -ArgumentList 'tunnel','--url','rdp://localhost:3389' -WindowStyle Hidden

      - name: Wait for Tunnel
        shell: pwsh
        run: |
          Start-Sleep -Seconds 30

      - name: Display Info
        shell: pwsh
        run: |
          $port = '${{ steps.serveo.outputs.PORT }}'
          Write-Output "========================================"
          Write-Output "RDP READY"
          Write-Output "Connect: serveo.net:$port"
          Write-Output "User: $env:RDP_USER"
          Write-Output "Pass: $env:RDP_PASS"
          Write-Output "========================================"

      - name: Keep Alive
        shell: pwsh
        run: |
          $port = '${{ steps.serveo.outputs.PORT }}'
          for ($i = 1; $i -le 360; $i++) {
            $hours = [math]::Round($i/60,2)
            Write-Output ("Active {0}m ({1}h) - serveo.net:{2}" -f $i,$hours,$port)
            Start-Sleep -Seconds 60
          }
