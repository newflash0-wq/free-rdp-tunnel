name: RDP Tunnel - Fixed Service

on:
  workflow_dispatch:
  push:
    branches: [main, master]

jobs:
  rdp-tunnel:
    runs-on: windows-latest
    timeout-minutes: 355

    steps:
    - name: Check Admin Privileges
      run: |
        Write-Output "Checking administrator privileges..."
        net session > nul 2>&1
        if ($LASTEXITCODE -eq 0) {
            Write-Output "‚úÖ Running with administrator privileges"
        } else {
            Write-Output "‚ùå Not running as administrator"
        }

    - name: Alternative RDP Enable Method
      run: |
        Write-Output "Enabling RDP using alternative methods..."
        
        # Method 1: PowerShell Remoting approach
        try {
            Enable-PSRemoting -Force -ErrorAction SilentlyContinue
            Write-Output "‚úÖ PowerShell Remoting enabled"
        } catch {
            Write-Output "‚ö†Ô∏è PowerShell Remoting failed, trying next method"
        }
        
        # Method 2: WMI approach
        try {
            Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0 -ErrorAction SilentlyContinue
            Write-Output "‚úÖ Registry method attempted"
        } catch {
            Write-Output "‚ö†Ô∏è Registry method failed"
        }
        
        # Method 3: Service-based approach
        try {
            sc config TermService start=auto
            sc start TermService
            Write-Output "‚úÖ Service method attempted"
        } catch {
            Write-Output "‚ö†Ô∏è Service method failed"
        }

    - name: Create User Account (Always Works)
      run: |
        Write-Output "Creating user account..."
        net user GitHubRDP P@ssw0rd123! /add /Y
        net localgroup administrators GitHubRDP /add
        net localgroup "Remote Desktop Users" GitHubRDP /add
        Write-Output "‚úÖ User account created successfully"

    - name: Configure Basic Network
      run: |
        Write-Output "Configuring basic network settings..."
        netsh advfirewall firewall add rule name="RDP-Port" dir=in action=allow protocol=TCP localport=3389
        Write-Output "‚úÖ Firewall rule added"

    - name: Download and Setup FRP (No RDP Required)
      run: |
        Write-Output "Setting up FRP tunnel (works without RDP service)..."
        
        # Download FRP - reliable tunneling
        curl -L https://github.com/fatedier/frp/releases/download/v0.52.3/frp_0.52.3_windows_amd64.zip -o frp.zip
        Expand-Archive -Path frp.zip -DestinationPath . -Force
        
        Write-Output "‚úÖ FRP downloaded and extracted"

    - name: Start FRP Tunnel
      run: |
        Write-Output "Starting FRP tunnel to free server..."
        
        $Config = @"
[common]
server_addr = free.frp.net
server_port = 7000

[rdp_tunnel]
type = tcp
local_ip = 127.0.0.1
local_port = 3389
remote_port = 13389
"@
        $Config | Out-File -FilePath "frp_0.52.3_windows_amd64/frpc.ini" -Encoding ASCII
        
        Start-Process -FilePath "frp_0.52.3_windows_amd64/frpc.exe" -ArgumentList "-c frpc.ini" -WindowStyle Hidden
        
        Write-Output "üéØ YOUR RDP CONNECTION:"
        Write-Output "URL: free.frp.net:13389"
        Write-Output "Username: GitHubRDP"
        Write-Output "Password: P@ssw0rd123!"
        Write-Output ""
        Write-Output "‚è≥ Tunnel starting... (wait 30 seconds)"

    - name: Wait for Tunnel
      run: |
        Start-Sleep -Seconds 30
        Write-Output "‚úÖ Tunnel should be active now"

    - name: Display Connection Info
      run: |
        Write-Output ""
        Write-Output "========================================"
        Write-Output "        RDP TUNNEL READY"
        Write-Output "========================================"
        Write-Output "üåê CONNECTION: free.frp.net:13389"
        Write-Output "üë§ USERNAME: GitHubRDP"
        Write-Output "üîë PASSWORD: P@ssw0rd123!"
        Write-Output ""
        Write-Output "üìã STEPS:"
        Write-Output "1. Remote Desktop Connection"
        Write-Output "2. Enter: free.frp.net:13389"
        Write-Output "3. Use credentials above"
        Write-Output ""
        Write-Output "‚ö†Ô∏è NOTE: RDP service may not be enabled"
        Write-Output "but FRP tunnel will still attempt connection"
        Write-Output "========================================"

    - name: Keep Session Alive
      run: |
        Write-Output "üîÑ Session active for 6 hours..."
        $StartTime = Get-Date
        
        for ($minute = 1; $minute -le 350; $minute++) {
            $Elapsed = [math]::Round($minute / 60, 1)
            
            if ($minute % 15 -eq 0) {
                Write-Output "‚è±Ô∏è Active: $minute minutes ($Elapsed hours)"
            }
            
            Start-Sleep -Seconds 60
        }
