name: Free RDP Tunnel - Cloudflared (Free)

on:
  workflow_dispatch:
  push:
    branches: [main, master]

env:
  RDP_USER: "RDPAdmin"
  RDP_PASS: "P@ssw0rd123!"

jobs:
  rdp-tunnel:
    runs-on: windows-latest
    timeout-minutes: 355

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable RDP Service
        shell: pwsh
        run: |
          reg add "HKLM\System\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
          netsh advfirewall firewall set rule group="remote desktop" new enable=Yes
          if ((Get-Service -Name TermService).Status -ne 'Running') {
            Start-Service -Name TermService
          }

      - name: Create User Account
        shell: pwsh
        run: |
          $user = $env:RDP_USER
          $pass = $env:RDP_PASS

          $exists = ((net user $user | Out-String).Trim()) -ne ''
          if ($exists) { net user $user $pass } else { net user $user $pass /add }

          net localgroup administrators $user /add
          net localgroup "Remote Desktop Users" $user /add
          net user $user /passwordchg:no
          net user $user /expires:never

      - name: Download Cloudflared
        shell: pwsh
        run: |
          $cf = Join-Path $PWD 'cloudflared.exe'
          Invoke-WebRequest -Uri 'https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe' -OutFile $cf -UseBasicParsing

      - id: cloudflared-start
        name: Start Cloudflared RDP Tunnel
        shell: pwsh
        run: |
          $log = Join-Path $PWD 'cloudflared.log'
          if (Test-Path $log) { Remove-Item $log -Force }
          $cf = Join-Path $PWD 'cloudflared.exe'

          Write-Output "Starting cloudflared tunnel..."
          Start-Process -FilePath $cf -ArgumentList 'tunnel','--url','rdp://localhost:3389' -RedirectStandardOutput $log -RedirectStandardError $log -WindowStyle Hidden

          # Wait a bit for cloudflared to produce the URL
          Start-Sleep -Seconds 60

          # Attempt to read URL from log
          $found = $null
          if (Test-Path $log) {
            $content = Get-Content $log -Raw -ErrorAction SilentlyContinue
            $m = [regex]::Match($content, 'https?://[A-Za-z0-9\-\._]+\.trycloudflare\.com(:\d+)?')
            if ($m.Success) { $found = $m.Value }
          }

          if ($found) { Add-Content -Path $env:GITHUB_OUTPUT -Value ("CLOUD_URL=$found") }
          else { Add-Content -Path $env:GITHUB_OUTPUT -Value "CLOUD_URL=UNKNOWN" }

      - name: Display Connection Info
        shell: pwsh
        run: |
          $url = '${{ steps.cloudflared-start.outputs.CLOUD_URL }}'
          if ($url -eq 'UNKNOWN') {
            Write-Output "❌ Cloudflared URL not found. Check cloudflared.log artifact."
          } else {
            Write-Output "✅ RDP ready! Public URL: $url"
            Write-Output "User: $env:RDP_USER"
            Write-Output "Pass: $env:RDP_PASS"
          }

      - name: Upload Cloudflared Log
        uses: actions/upload-artifact@v4
        with:
          name: cloudflared-log
          path: cloudflared.log

      - name: Maintain Session (heartbeat)
        shell: pwsh
        run: |
          for ($i=1; $i -le 360; $i++) {
            Write-Output ("⏱️  Active: {0} minutes" -f $i)
            Start-Sleep -Seconds 60
          }
